{
    "componentChunkName": "component---node-modules-gatsby-philipps-foam-theme-src-templates-local-file-jsx",
    "path": "/TypeScript",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"typescript\"\n  }, \"TypeScript\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"foamlink\", {\n    parentName: \"li\"\n  }, \"Event Listener Handler Map React\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"foamlink\", {\n    parentName: \"li\"\n  }, \"Redux Observable Ajax Default Header Hack\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"foamlink\", {\n    parentName: \"li\"\n  }, \"Union Array to Array Union\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":1,"value":"TypeScript"}],"outboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"event-listener-handler-map-react\"\n  }, \"Event Listener Handler Map React\"), mdx(\"p\", null, \"A nice way of creating a map of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EventListener\"), \" events and handlers for a react component.\"), mdx(\"p\", null, \"In this example, it includes the input element which the events come from:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"type InputListeners = {\\n    [eventType in keyof Parial<WindowEventMap>]: (\\n        input: HTMLInputElement\\n    ) => {\\n        handler: (event: WindowEventMap[eventType]) => void;\\n    };\\n};\\n\\n// usage\\nconst listeners: InputListeners = {\\n    keydown: (input) => ({\\n        // event will be infered as KeyboardEvent\\n        handler: (event) => {\\n            if (e.key === 'Escape') {\\n                input.blur();\\n            }\\n        }\\n    })\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"id":"eb89ed64-1601-5dec-95ab-2bf766d6f28d","fields":{"slug":"/Event Listener Handler Map React","title":"Event Listener Handler Map React"}}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"redux-observable-ajax-default-header-hack\"\n  }, \"Redux Observable Ajax Default Header Hack\"), mdx(\"p\", null, \"Ever wanted to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ajax.get()\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ajax.post()\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ajax.put()\"), \" and the rest without having to set the authorization header every time? Welcome to the future!\"), mdx(\"p\", null, \"This is an annoying problem since the parameters for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"get\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getJSON\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"delete\"), \" are not the same as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"patch\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"post\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"put\"), \".\"), mdx(\"p\", null, \"In the example below a Proxy is used to take the ajax method and then grab the position of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"header\"), \" object. The object then has a the token added to it, and is then called with the modified arguments.\"), mdx(\"p\", null, \"This is working with TS 4.5.4, however I did sneak an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"any\"), \" in... would love to get rid of that if anyone has any suggestions.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"import { ajax as Ajax } from 'rxjs/ajax';\\nimport { Observable } from 'rxjs';\\n\\n// a proxy for the default ajax function\\n// adapted from https://stackoverflow.com/questions/45778994/rxjs-how-to-set-default-request-headers\\n\\nexport type AuthenticatedRequest<ResponseType> = (\\n  ajax: typeof Ajax\\n) => Observable<ResponseType>;\\n\\nconst createAuthorizationHeader = (token: string) => ({\\n  Authorization: `Bearer ${token}`,\\n});\\n\\nconst getHeadersPos = (ajaxMethod: string): number => {\\n  switch (ajaxMethod) {\\n    case 'get':\\n    case 'getJSON':\\n    case 'delete':\\n      return 1;\\n    case 'patch':\\n    case 'post':\\n    case 'put':\\n      return 2;\\n    default:\\n      return -1;\\n  }\\n};\\n\\nconst ajaxProxy =\\n  (token: string, ajaxCreationMethod: typeof Ajax) => {\\n    return new Proxy(ajaxCreationMethod, {\\n      get(ajax, requestType: keyof typeof Ajax) {\\n        const ajaxMethod = ajax[requestType];\\n        const headersPos = getHeadersPos(requestType);\\n\\n        if (headersPos === -1 || typeof ajaxMethod !== 'function') {\\n          return ajaxMethod;\\n        }\\n\\n        return (...args: Parameters<typeof ajaxMethod>) => {\\n          args[headersPos] = {\\n            ...args[headersPos] as Record<string, string>,\\n            ...createAuthorizationHeader(token),\\n          };\\n\\n          return ajaxMethod.apply(this, args as any);\\n        };\\n      },\\n    });\\n  };\\n\\nexport const ajax = (token: string) => ajaxProxy(token, Ajax);\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"id":"d457185c-1428-554b-beb1-10f19a1012ca","fields":{"slug":"/Redux Observable/Redux Observable Ajax Default Header Hack","title":"Redux Observable Ajax Default Header Hack"}}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"union-array-to-array-union\"\n  }, \"Union Array to Array Union\"), mdx(\"p\", null, \"I didn't come up with this one, but it was used on a project and was useful at some point.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"type A = string[] | number[] | object[]\\ntype Unioniser<T extends Array<unknown>> = T[number][];\\ntype B = Unioniser<A>\\n// type B = (string | number | object)[]\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"id":"f26585d9-040a-5840-b3c6-187b058dfecb","fields":{"slug":"/Union Array to Array Union","title":"Union Array to Array Union"}}}],"inboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"home\"\n  }, \"Home\"), mdx(\"p\", null, \"\", mdx(\"foamlink\", {\n    parentName: \"p\"\n  }, \"Todo\"), \"\"), mdx(\"h3\", {\n    \"id\": \"web\"\n  }, \"Web\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"foamlink\", {\n    parentName: \"li\"\n  }, \"Redux Observable\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"foamlink\", {\n    parentName: \"li\"\n  }, \"Event Listener Handler Map React\"), \"\")), mdx(\"h3\", {\n    \"id\": \"cloud\"\n  }, \"Cloud\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"foamlink\", {\n    parentName: \"li\"\n  }, \"Azure SSO Integration\"), \"\")), mdx(\"h3\", {\n    \"id\": \"language\"\n  }, \"Language\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"foamlink\", {\n    parentName: \"li\"\n  }, \"Java\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"foamlink\", {\n    parentName: \"li\"\n  }, \"TypeScript\"), \"\")), mdx(\"h3\", {\n    \"id\": \"concepts\"\n  }, \"Concepts\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"foamlink\", {\n    parentName: \"li\"\n  }, \"Complexity\"), \"\")), mdx(\"h3\", {\n    \"id\": \"utils\"\n  }, \"Utils\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"foamlink\", {\n    parentName: \"li\"\n  }, \"Git\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"9f0e07b8-2af3-5670-a2e4-515b1f31cd1f","fields":{"slug":"/Home","title":"Home"}}}]},"fields":{"slug":"/TypeScript","title":"TypeScript"}}},"pageContext":{"id":"f19e7d01-f331-5757-aa9e-58fade98180e"}},
    "staticQueryHashes": ["1968664781","2221750479","2468095761","2557268104","3120354889","654337312"]}