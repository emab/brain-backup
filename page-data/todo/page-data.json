{
    "componentChunkName": "component---node-modules-gatsby-philipps-foam-theme-src-templates-local-file-jsx",
    "path": "/todo",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"todo\"\n  }, \"Todo\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add \", mdx(\"foamlink\", {\n    parentName: \"li\"\n  }, \"Cypress and MSAL SSO\"), \" stuff\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":1,"value":"Todo"}],"outboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"cypress-and-msal-sso\"\n  }, \"Cypress and MSAL SSO\"), mdx(\"p\", null, \"Created an application that used \", mdx(\"foamlink\", {\n    parentName: \"p\"\n  }, \"Azure SSO Integration\"), \" and wanted to test with Cypress. I was thinking about bypassing the login altogether but the doucmentation advised against this.\"), mdx(\"p\", null, \"Instead of skipping authentication or manually typing in a username and password each time, you should inject the relevant information into \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sessionStorage\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"localStorage\"), \".\"), mdx(\"h3\", {\n    \"id\": \"requirements\"\n  }, \"Requirements:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Azure AD Tenant\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Worth creating a seperate one for testing environment\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create the API / App applications as described in \", mdx(\"foamlink\", {\n    parentName: \"li\"\n  }, \"Azure SSO Integration\"), \"\")), mdx(\"h2\", {\n    \"id\": \"cypress-setup\"\n  }, \"Cypress Setup\"), mdx(\"p\", null, \"First you'll need to store some secrets in Cypress to be used when getting auth details:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"// support/authSettings.json\\n{\\n  \\\"authority\\\": \\\"https://login.microsoftonline.com/your-aad-tenant-id\\\",\\n  \\\"clientId\\\": \\\"app-client-id\\\",\\n  \\\"clientSecret\\\": \\\"app-client-secret\\\",\\n  \\\"apiScopes\\\": [\\\"api://api-client-id/Data.Read\\\"],\\n  \\\"username\\\": \\\"user@yourcompany.onmicrosoft.com\\\",\\n  \\\"password\\\": \\\"password\\\"\\n}\\n\")), mdx(\"p\", null, \"Along with the following support file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"\\nexport const _frontmatter = {}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"id":"8c7a7bd8-0843-5174-85f2-e85944bdd262","fields":{"slug":"/Cypress and MSAL SSO","title":"Cypress and MSAL SSO"}}}],"inboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"brain-bank\"\n  }, \"Brain Bank\"), mdx(\"h2\", {\n    \"id\": \"foamlinktodofoamlink\"\n  }, \"\", mdx(\"foamlink\", {\n    parentName: \"h2\"\n  }, \"todo\"), \"\"), mdx(\"h2\", {\n    \"id\": \"foamlinkinboxfoamlink\"\n  }, \"\", mdx(\"foamlink\", {\n    parentName: \"h2\"\n  }, \"inbox\"), \"\"), mdx(\"h3\", {\n    \"id\": \"contents\"\n  }, \"Contents\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"foamlink\", {\n    parentName: \"li\"\n  }, \"Azure SSO Integration\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"foamlink\", {\n    parentName: \"li\"\n  }, \"Complexity\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"foamlink\", {\n    parentName: \"li\"\n  }, \"Event Listener Handler Map React\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"foamlink\", {\n    parentName: \"li\"\n  }, \"Java\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"foamlink\", {\n    parentName: \"li\"\n  }, \"Redux Observable Setup\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"062389c4-86fc-5682-b5ac-8c7d9f5fd85f","fields":{"slug":"/home","title":"Brain Bank"}}}]},"fields":{"slug":"/todo","title":"Todo"}}},"pageContext":{"id":"dc5d8615-3d39-5e34-a094-517079d839f3"}},
    "staticQueryHashes": ["1968664781","2221750479","2468095761","2557268104","3120354889","654337312"]}