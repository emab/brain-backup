{
    "componentChunkName": "component---node-modules-gatsby-philipps-foam-theme-src-templates-local-file-jsx",
    "path": "/Redux Observable/Redux Observable Setup",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"redux-observable-setup\"\n  }, \"Redux Observable Setup\"), mdx(\"p\", null, \"#rxjs #redux-observable #react\"), mdx(\"p\", null, \"When setting up \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://redux-observable.js.org\"\n  }, \"Redux Observable\"), \", it's really important to get the global error handler. I often forget to do this, and it means that if an error from an epic bubbles up to the root epic, the entire stream terminates.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"This isn't good!\")), mdx(\"p\", null, \"If you're expecting errors to be thrown, it's good practice to catch and handle / log them when they occur, but errors can happen that you don't expect. The documentation recommends setting up a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"global error handler\"), \" when setting up the middleware. It's right there in the docs, why do I always forget?!\"), mdx(\"p\", null, \"Here's what you need to add to your root epic:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"const rootEpic = (action$, store$, dependencies) =>\\n  combineEpics(...epics)(action$, store$, dependencies).pipe(\\n    catchError((error, source) => {\\n      console.error(error);\\n      return source;\\n    })\\n  );\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":1,"value":"Redux Observable Setup"}],"outboundReferences":[],"inboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"redux-observable\"\n  }, \"Redux Observable\"), mdx(\"p\", null, \"All things observable!\"), mdx(\"h2\", {\n    \"id\": \"foamlinkredux-observable-setupfoamlink\"\n  }, \"\", mdx(\"foamlink\", {\n    parentName: \"h2\"\n  }, \"Redux Observable Setup\"), \"\"), mdx(\"p\", null, \"Some setup notes for Redux Observable\"), mdx(\"h2\", {\n    \"id\": \"foamlinkredux-observable-ajaxfoamlink\"\n  }, \"\", mdx(\"foamlink\", {\n    parentName: \"h2\"\n  }, \"Redux Observable Ajax\"), \"\"), mdx(\"p\", null, \"Some info on using the provided Ajax functions for HTTP requests.\"), mdx(\"h2\", {\n    \"id\": \"foamlinkredux-observable-ajax-default-header-hackfoamlink\"\n  }, \"\", mdx(\"foamlink\", {\n    parentName: \"h2\"\n  }, \"Redux Observable Ajax Default Header Hack\"), \"\"), mdx(\"p\", null, \"A nice hack for inserting a token into the header of all Ajax HTTP requests\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"690ad06d-a2d9-5c2b-8c9b-0ba5e70d242a","fields":{"slug":"/Redux Observable/Redux Observable","title":"Redux Observable"}}}]},"fields":{"slug":"/Redux Observable/Redux Observable Setup","title":"Redux Observable Setup"}}},"pageContext":{"id":"77d36536-0b18-5443-b949-dea6cb636414"}},
    "staticQueryHashes": ["1968664781","2221750479","2468095761","2557268104","3120354889","654337312"]}